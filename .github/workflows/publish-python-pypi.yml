name: Publish Python SDK to PyPI

on:
  push:
    tags:
      - 'v*.*.*'
      - 'python-v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: read

jobs:
  publish-pypi:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
          VERSION="${VERSION#v}"
          VERSION="${VERSION#python-v}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create VERSION file
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        cd python
        # Create VERSION file for setup.py to read
        echo "$VERSION" > VERSION
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      working-directory: ./python
      run: python -m build
    
    - name: Check package
      working-directory: ./python
      run: twine check dist/*
    
    - name: Publish to Test PyPI
      working-directory: ./python
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/* --skip-existing
      continue-on-error: true
    
    - name: Publish to PyPI
      working-directory: ./python
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/* --skip-existing
    
    - name: Summary
      run: |
        echo "## Python SDK Published to PyPI" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Package**: rocket-welder-sdk" >> $GITHUB_STEP_SUMMARY
        echo "- **PyPI**: https://pypi.org/project/rocket-welder-sdk/" >> $GITHUB_STEP_SUMMARY
        echo "- **Test PyPI**: https://test.pypi.org/project/rocket-welder-sdk/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Install with:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo 'pip install rocket-welder-sdk==${{ steps.version.outputs.version }}' >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY